package com.zzu.minjie.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.zzu.minjie.Util.DBUTil;
import com.zzu.minjie.bean.DishStyle;
import com.zzu.minjie.bean.Food;
import com.zzu.minjie.bean.Notice;

public class DishStyleDao {

	public List<DishStyle> getDishStyles() {
		List<DishStyle> list = new ArrayList<DishStyle>();
		Connection conn = DBUTil.getConn();
		PreparedStatement pstmt = null;
		try {
			String sql = "select * from DishStyle";
			pstmt = conn.prepareStatement(sql);
			ResultSet rs = pstmt.executeQuery();
			rs = pstmt.executeQuery();
			while (rs.next()) {

				DishStyle dishStyle = new DishStyle();
				dishStyle.setDishName(rs.getString("dishName"));
				dishStyle.setDishExplain(rs.getString("dishExplain"));
				dishStyle.setOpt(rs.getString("opt"));
				dishStyle.setImage(rs.getString("image"));
				list.add(dishStyle);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if (pstmt != null) {
					pstmt.close();
				}
				if (conn != null) {
					conn.close();
				}
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		return list;
	}

	public List<DishStyle> readType() {// ��ʾ�������
		List<DishStyle> list = new ArrayList<DishStyle>();
		Connection conn = DBUTil.getConn();
		PreparedStatement pstmt = null;
		try {
			String sql4 = "select * from dishstyle";
			pstmt = conn.prepareStatement(sql4);
			ResultSet rs = pstmt.executeQuery();
			rs = pstmt.executeQuery();
			while (rs.next()) {
				int dishid = rs.getInt("dishId");
				String dishname = rs.getString("dishName");
				String dishexplain = rs.getString("dishExplain");
				String opt = rs.getString("opt");
				String image = rs.getString("image");

				DishStyle st = new DishStyle(dishid, dishname, dishexplain, opt, image);
				list.add(st);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if (pstmt != null) {
					pstmt.close();
				}
				if (conn != null) {
					conn.close();
				}
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		return list;
	}

	public List<DishStyle> getDishStyleByTitle(String title) {// ������ϵ����
		List<DishStyle> list = new ArrayList<DishStyle>();
		Connection conn = DBUTil.getConn();
		PreparedStatement pstmt = null;
		try {
			String sql1 = "select * from dishstyle where dishname LIKE ? ";
			pstmt = conn.prepareStatement(sql1);
			pstmt.setString(1, "%" + title + "%");
			ResultSet rs = pstmt.executeQuery();
			rs = pstmt.executeQuery();
			while (rs.next()) {

				int dishid = rs.getInt("dishId");
				String name = rs.getString("dishName");
				String explain = rs.getString("dishExplain");
				String opt = rs.getString("opt");
				String image = rs.getString("image");

				DishStyle st = new DishStyle(dishid, name, explain, opt, image);
				list.add(st);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if (pstmt != null) {
					pstmt.close();
				}
				if (conn != null) {
					conn.close();
				}
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		return list;
	}

	public void addType(String dishName, String dishExplain, String option, String image) {// ��Ӳ�ϵ����
		Connection conn = DBUTil.getConn();
		PreparedStatement pstmt = null;
		try {
			String sql2 = "insert into dishstyle(dishName,dishExplain,opt,image) values(?,?,?,?)";
			pstmt = conn.prepareStatement(sql2);
			pstmt.setString(1, dishName);
			pstmt.setString(2, dishExplain);
			pstmt.setString(3, option);
			pstmt.setString(4, image);
			pstmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			DBUTil.closeJDBC(null, pstmt, conn);
		}

	}

	public void deleteDishStyle(int id) {// ɾ����ϵ����

		Connection conn = DBUTil.getConn();
		PreparedStatement pstmt = null;
		try {
			String sql3 = "delete from dishstyle where dishid=?";
			pstmt = conn.prepareStatement(sql3);
			pstmt.setInt(1, id);
			pstmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			DBUTil.closeJDBC(null, pstmt, conn);
		}

	}

	public void updateDishStyle(int dishid, String name, String explain, String option, String image) {// �޸Ĳ�ϵ����
		String sql2 = "UPDATE dishstyle SET dishname=?,dishexplain=?,opt=?,image=? WHERE dishid=? ";
		Connection conn = DBUTil.getConn();
		PreparedStatement pstmt = null;
		try {
			pstmt = conn.prepareStatement(sql2);
			pstmt.setString(1, name);
			pstmt.setString(2, explain);
			pstmt.setString(3, option);
			pstmt.setString(4, image);
			pstmt.setInt(5, dishid);
			pstmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			DBUTil.closeJDBC(null, pstmt, conn);
		}
	}

	/**
	 * ��id��ѯ
	 * 
	 * @return
	 */
	public DishStyle searchById(Integer id) {
		DishStyle dishstyle = new DishStyle();
		Connection conn = DBUTil.getConn();
		PreparedStatement pstmt = null;
		try {
			String sql = "select * from dishstyle WHERE dishid=? ";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, id);
			ResultSet rs = pstmt.executeQuery();

			while (rs.next()) {
				dishstyle.setDishId(id);
				dishstyle.setDishName(rs.getString("dishName"));
				dishstyle.setDishExplain(rs.getString("dishExplain"));
				dishstyle.setOpt(rs.getString("opt"));
				dishstyle.setImage(rs.getString("image"));

			}

		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if (pstmt != null) {
					pstmt.close();
				}
				if (conn != null) {
					conn.close();
				}
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		return dishstyle;
	}
}
