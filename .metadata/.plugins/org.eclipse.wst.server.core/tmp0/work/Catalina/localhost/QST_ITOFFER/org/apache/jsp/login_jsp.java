/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.12
 * Generated at: 2018-11-29 13:11:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	// 获得请求的绝对地址
	String path = request.getContextPath();
	String basePath = request.getScheme() + "://"
			+ request.getServerName() + ":" + request.getServerPort()
			+ path + "/";

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>登录 - 锐聘网</title>\r\n");
      out.write("<base href=\"");
      out.print(basePath);
      out.write("\">\r\n");
      out.write("<link href=\"css/base.css\" type=\"text/css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"css/login.css\" type=\"text/css\" rel=\"stylesheet\" />\r\n");
      out.write("<meta\r\n");
      out.write("\tcontent=\"大学生求职,大学生就业,大学生招聘,IT人才,IT人才招聘,大学生名企招聘,,大学生找工作,IT名企招聘，IT行业招聘，IT企业快速入职\"\r\n");
      out.write("\tname=\"keywords\">\r\n");
      out.write("<meta\r\n");
      out.write("\tcontent=\"锐聘专注于为企业提供高效的人力资源解决方案，同时面向IT类技术人才推出快速一站式免费就业服务。秉承QST青软实训人才服务理念，为数千家企业量身定做个性化、全程化的人才培养体系，同时帮助中高级人才铺设成功之路，为人才和企业架设起沟通之桥。\"\r\n");
      out.write("\tname=\"description\">\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tfunction validate() {\r\n");
      out.write("\t\tvar email = document.getElementById(\"email\");\r\n");
      out.write("\t\tvar password = document.getElementById(\"password\");\r\n");
      out.write("\t\tif (email.value == \"\") {\r\n");
      out.write("\t\t\talert(\"邮箱不能为空！\");\r\n");
      out.write("\t\t\temail.focus();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (password.value == \"\") {\r\n");
      out.write("\t\t\talert(\"密码不能为空！\");\r\n");
      out.write("\t\t\tpassword.focus();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	String applicantEmail = "";
String applicantPwd = "";
// 从客户端读取Cookie
Cookie[] cookies = request.getCookies();  
if (cookies != null) {  
  for (Cookie cookie : cookies) {  
    if ("COOKIE_APPLICANTEMAIL".equals(cookie.getName())) {  
    	// 解密获取存储在Cookie中的求职者Email
      applicantEmail = com.qst.itoffer.util.CookieEncryptTool.decodeBase64(cookie.getValue());   
    }  
    if ("COOKIE_APPLICANTPWD".equals(cookie.getName())) {  
    	// 解密获取存储在Cookie中的求职者登录密码
      applicantPwd = com.qst.itoffer.util.CookieEncryptTool.decodeBase64(cookie.getValue());  
    }  
  }
}

      out.write("\r\n");
      out.write("\t<!-- 网站公共头部 -->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "top.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- 登录部分开始 -->\r\n");
      out.write("\t<div class=\"content\">\r\n");
      out.write("\t\t<div class=\"page_name\">登陆</div>\r\n");
      out.write("\t\t<div class=\"login_content\">\r\n");
      out.write("\t\t\t<!-- 登录表单开始 -->\r\n");
      out.write("\t\t\t<form action=\"ApplicantLoginServlet\" method=\"post\"\r\n");
      out.write("\t\t\t\tonsubmit=\"return validate();\">\r\n");
      out.write("\t\t\t\t<div class=\"login_l\">\r\n");
      out.write("\t\t\t\t\t<p class=\"font14\" style=\"color: gray\">使用注册邮箱登录</p>\r\n");
      out.write("\t\t\t\t\t<div class=\"span1\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"tn-form-label\">邮箱：</label> <input class=\"tn-textbox\"\r\n");
      out.write("\t\t\t\t\t\t\ttype=\"text\" name=\"email\" id=\"email\" value=\"");
      out.print(applicantEmail);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"span1\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"tn-form-label\">密码：</label> <input class=\"tn-textbox\"\r\n");
      out.write("\t\t\t\t\t\t\ttype=\"password\" name=\"password\" id=\"password\" value=\"");
      out.print(applicantPwd);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"tn-form-row-button\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"span1\">\r\n");
      out.write("\t\t\t\t\t\t\t<input name=\"submit\" type=\"submit\" class=\"tn-button-text\"\r\n");
      out.write("\t\t\t\t\t\t\t\tvalue=\"登   录\"> <span class=\"it-register-text\"> <input\r\n");
      out.write("\t\t\t\t\t\t\t\tchecked=\"checked\" name=\"rememberMe\" id=\"rememberMe\"\r\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"tn-checkbox\" type=\"checkbox\" value=\"true\"> <label\r\n");
      out.write("\t\t\t\t\t\t\t\tfor=\"RememberPassword\" style=\"color: gray\"> 记住密码</label></span>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t\t\t\t\t<!-- 从拦截器中获取被拦截前的请求地址 -->\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" name=\"requestPath\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.requestPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t\t<!-- 登录表单结束 -->\r\n");
      out.write("\t\t\t<div class=\"login_r\">\r\n");
      out.write("\t\t\t\t<p align=\"center\">\r\n");
      out.write("\t\t\t\t\t<b>还没有帐号？</b><a href=\"register.jsp\">10秒钟快速注册</a>\r\n");
      out.write("\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t<img src=\"images/login_pic.jpg\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- 登录部分结束 -->\r\n");
      out.write("\r\n");
      out.write("\t<!-- 网站公共尾部 -->\r\n");
      out.write("\t<iframe src=\"foot.html\" width=\"100%\" height=\"150\" scrolling=\"no\"\r\n");
      out.write("\t\tframeborder=\"0\"></iframe>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
